import funkin.play.PlayState;
import funkin.modding.module.Module;
import flixel.FlxG;
import funkin.Paths;
import openfl.utils.Assets;
import funkin.ui.freeplay.FreeplayState;
import funkin.ui.freeplay.components.DifficultySprite;
import funkin.util.Constants;
import haxe.Json;

class freeplayDiffFix extends Module {
    var jsonPath:String;
    var data:Dynamic;
    public function new() {
        super("freeplayDiffFix", 1);
        jsonPath = Paths.json("extraDiffs");
        data = Json.parse(Assets.getText(jsonPath));
    }

    override function onCreate(e) {
        super.onCreate(e);
        if (Assets.exists(jsonPath)) {
            for (diff in data.difficulties) {
                Constants.DEFAULT_DIFFICULTY_LIST_FULL.push(diff.id);
            }
            
        }
    }

    override function onUpdate(e){
        super.onUpdate(e);
        /*
            json format (needs to have the items and then the offset placements)
            {
                "difficulties": [
                    {"id": "insane", "x": 0, "y": 0},
                    {"id": "duet", "x": 0, "y": 0}
                ]
            }
        */
        if (Assets.exists(jsonPath)) {
            if (Std.isOfType(FlxG.state.subState, FreeplayState)) {
                if (FlxG.state.subState.grpDifficulties == null) return;
                for (diff in data.difficulties) {
                    for (diffSprite in FlxG.state.subState.grpDifficulties.group.members) {
                        if (diffSprite.difficultyId == diff.id) {
                            if (diff.x != null) diffSprite.offset.x = diff.x;
                            if (diff.y != null) diffSprite.offset.y = diff.y;
                        }
                    }
                }
            }
        }
    }
}